---
- name: Convert, upload and Install vCenter in an Azure VM
  hosts: localhost
  collections:
    - azure.azcollection
  connection: local #comment if remote host.
  vars:
  - ansible_python_interpreter: /usr/bin/python3
  - resource_group: 'vmware'
  - location: 'australiaeast'
  - vm_name: "vcenter"
  - vm_size: "Standard_E2as_v4"
  - vm_user: "local-user"
  - vm_password: "Password@321"
  - reqpkgs_apt:
    - qemu-kvm
    - libvirt-daemon-system
    - libvirt-daemon
    - virtinst
    - bridge-utils
    - libosi
  tasks:
  - name: Create a resource group
    azure_rm_resourcegroup:
      name: "{{ resource_group }}"
      location: "{{ location }}"
  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      address_prefixes: "10.0.0.0/16"
  - name: Add subnet
    azure_rm_subnet:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      address_prefix: "10.0.1.0/24"
      virtual_network: "{{ vm_name }}"
  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: "{{ resource_group }}"
      allocation_method: Static
      name: "{{ vm_name }}"
  - name: Create Network Security Group that allows SSH
    azure_rm_securitygroup:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 1001
          direction: Inbound
  - name: Create virtual network inteface card
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      virtual_network: "{{ vm_name }}"
      subnet: "{{ vm_name }}"
      public_ip_name: "{{ vm_name }}"
      security_group: "{{ vm_name }}"
  - name: Create VM
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      vm_size: "{{ vm_size }}"
      admin_username: "{{ vm_user }}"
      admin_password: "{{ vm_password }}"
      network_interfaces: "{{ vm_name }}"
      image:
        offer: debian-11
        publisher: Debian
        sku: 11
        version: latest
      managed_disk_type: Premium_LRS
      data_disks:
          - lun: 0
            disk_size_gb: 512
            managed_disk_type: Standard_LRS
- name: Setup KVM on the Azure VM
  hosts: vcsa-in-azure
  tasks:
  - name: Ensure required packages are installed (Debian)
    apt: pkg={{item}} state=present
    with_items: '{{ reqpkgs_apt }}'
    when: ansible_pkg_mgr == "apt"